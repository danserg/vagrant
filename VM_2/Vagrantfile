# -*- mode: ruby -*-
# vi: set ft=ruby :

# Префикс для LAN сети
BRIDGE_NET="192.168.1."
# Префикс для Internal сети
HOST_ONLY_ADAPTER="192.168.56."
# Домен который будем использовать для всей площадки
DOMAIN="sample.com"
# Массив из хешей, в котором заданы настройки для каждой виртуальной машины
servers=[
  {
    :box_name => "ubuntu/trusty64",
    :hostname => "app1." + DOMAIN,
    :ip => BRIDGE_NET + "150",
    :ip_int => HOST_ONLY_ADAPTER + "101",
    :cpu => 1,
    :ram => 512,
    :host_ssh_port => 2223,
    :forwarded_ports => {"80" => "8080", "443" => "8443"},  # "guest_port" => "host_port"
    :synced_folder => {"D://Downloads" => "/mnt/shara"}     # "host_path" => "guest_path"
#    :init_script => "test.sh"
  }
  #,
#  {
#    :box_name => "ubuntu/trusty64",
#    :hostname => "app2." + DOMAIN,
#    :ip => BRIDGE_NET + "151",
#    :ip_int => HOST_ONLY_ADAPTER + "102",
#    :cpu => 1,
#    :ram => 512
#  } #,
#  {
#    :box_name => "ubuntu/trusty64",
#    :hostname => "db1." + DOMAIN,
#    :ip => BRIDGE_NET + "152",
#    :ip_int => HOST_ONLY_ADAPTER + "103",
#    :cpu => 1,
#    :ram => 512,
#    :hdd_name => "db1_hdd.vdi",
#    :hdd_size => "10000"
#  },
#  {
#    :box_name => "ubuntu/trusty64",
#    :hostname => "db2." + DOMAIN,
#    :ip => BRIDGE_NET + "153",
#    :ip_int => HOST_ONLY_ADAPTER + "104",
#    :cpu => 1,
#    :ram => 512,
#    :hdd_name => "db2_hdd.vdi",
#    :hdd_size => "10000"
# }
]

$init_script = <<SCRIPT
sudo apt-get update
sudo apt-get install -y mc
SCRIPT


# Входим в Главную конфигурацию vagrant версии 2
Vagrant.configure(2) do |config|
    # Отключить дефолтную шару
    config.vm.synced_folder ".", "/vagrant", disabled: true
    # Проходим по элементах массива "servers"
    servers.each do |machine|
        # Применяем конфигурации для каждой машины. Имя машины(как ее будет видно в Vbox GUI) находится в переменной "machine[:hostname]"
        config.vm.define machine[:hostname] do |node|
            # Поднять машину из образа "ubuntu/trusty64", который мы создали в предыдущей статье
            node.vm.box = machine[:box_name]
            # Также, можно указать URL откуда стянуть нужный box если такой есть
            #node.vm.box_url = "http://files.vagrantup.com/precise64.box"
            # Hostname который будет присвоен VM (самой ОС)
            node.vm.hostname = machine[:hostname]
            #VBoxManage.exe list bridgedifs overwrite NAT adapter :adapter=>1
            # Добавление и настройка Bridge сетевого адаптера(моста) NAT. Чтобы узнать точное название birdge адаптера, нужно использовать VBoxManage.exe (смотрите ниже)
            #node.vm.network "public_network", ip: machine[:ip], bridge: 'Intel(R) Centrino(R) Wireless-N 130'
            # Добавление и настройка внутреннего сетевого адаптера (Intnet)/ Host-Only Adapter
            node.vm.network "private_network", ip: machine[:ip_int]
            # Пул портов, который будет использоваться для подключения к каждый VM через 127.0.0.1
            node.vm.usable_port_range = (2200..2250)
            # Проброс портов между хостовой и гостевой машиной, если указаны в конфигурации
            if (!machine[:forwarded_ports].nil?)
              machine[:forwarded_ports].each do |guest_port, host_port|
                node.vm.network "forwarded_port", guest: "#{guest_port}", host: "#{host_port}"
              end
            end
            # Добавить шару между хостовой и гостевой машиной, если указаны в конфигурации
            if (!machine[:synced_folder].nil?)
              machine[:synced_folder].each do |host_path, guest_path|
                node.vm.synced_folder "#{host_path}", "#{guest_path}"
              end
            end
            # Настройка SSH доступа
            if (!machine[:host_ssh_port].nil?)
              node.vm.network :forwarded_port, guest: 22, host: machine[:host_ssh_port], id: "ssh"
            end
            # Домен/IP для подключения
            #node.ssh.host = machine[:ip]
            # Для доступа по ранее добавленному ключу
            #node.ssh.private_key_path = "private_key"
            # SSH логин пользователя
            # node.ssh.username = "alex"
            # SSH пароль
            #node.ssh.password = "vagrant"
            # Тонкие настройки для конкретного провайдера (в нашем случаи - VBoxManage)
            node.vm.provider "virtualbox" do |vb|
                # Размер RAM памяти
                #vb.customize ["modifyvm", :id, "--memory", machine[:ram], "--cpus", machine[:cpu]]
                vb.memory = machine[:ram]
                # set the number of cpus
                vb.cpus = machine[:cpu]
                # Можно перезаписать название VM в Vbox GUI
                vb.name = machine[:hostname]
                # Добавление жесткого диска, если такой указан в конфигурации
                if (!machine[:hdd_name].nil?)
                    # Не создавать диск, если он уже существует
                    unless File.exist?(machine[:hdd_name])
                        vb.customize ["createhd", "--filename", machine[:hdd_name], "--size", machine[:hdd_size]]
                    end
                    # Подключить созданный диск к поточной VM
                    vb.customize ["storageattach", :id, "--storagectl", "SATA", "--port", 1, "--device", 0, "--type", "hdd", "--medium", machine[:hdd_name]]
                end
                # Где хранить snapshot
                #vb.customize ["modifyvm", :id, "--snapshotfolder", "D:\\test"]
            end
            if (!machine[:init_script].nil?)
              node.vm.provision "shell", path: machine[:init_script]
            end
            node.vm.provision "shell", inline: $init_script
        end
    end
end

